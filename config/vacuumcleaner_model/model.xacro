<robot name="vacuumcleaner" xmlns:xacro="http://wiki.ros.org/xacro">
  <!-- Radius of center disk (meters) -->
  <xacro:arg name="body_radius" default="0.1"/>   

  <!-- Height of center disk (meters)-->
  <xacro:property name="body_height" value="0.04"/>
  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${2.0*m*(r*r)/5.0}" ixy="0.0" ixz="0.0" iyy="${2.0*m*(r*r)/5.0}" iyz="0.0" izz="${2.0*m*(r*r)/5.0}"/>
    </inertial>
  </xacro:macro> 
  <xacro:macro name="disk_inertia" params="mass radius height orientation">
    <inertial>
      <debug mass="${mass}" radius="${radius}" height="${height}" />
      <origin rpy="${orientation}" xyz="0 0 0" />
      <mass value="${mass}" />
      <inertia
        ixx="${1/12 * mass * (3* radius * radius + height * height)}"
        ixy="0"
        ixz="0"
        iyy="${1/12 * mass * (3* radius * radius + height * height)}"
        iyz="0"
        izz="${1/2 * mass * radius * radius}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="wheel" params="suffix radius xoffset yoffset zoffset">
     <link name="link_${suffix}_wheel">
     <xacro:disk_inertia mass="0.250" radius="${radius}" height="0.018" orientation="0 1.5757 1.5757"/>
     <collision name="link_${suffix}_wheel_collision">
        <origin rpy="0 1.5757 1.5757" xyz="0 0 0" />
        <geometry>
          <cylinder length="0.018" radius="${radius}" />
        </geometry>
     </collision>
      <visual name="link_${suffix}_wheel_visual">
        <origin rpy="0 1.5757 1.5757" xyz="0 0 0" />
        <geometry>
          <cylinder length="0.018" radius="${radius}" />
        </geometry>
      </visual>
    </link>
     <gazebo reference="link_${suffix}_wheel">
       <kp>1000000.0</kp>
       <kd>100.0</kd>
       <mu1>1.0</mu1>
       <mu2>1.0</mu2>
       <fdir1>1 0 0</fdir1>
       <maxVel>1.0</maxVel>
       <minDepth>0.00</minDepth>
    </gazebo>
   <joint name="joint_${suffix}_wheel" type="continuous">
       <origin rpy="0 0 0" xyz="${xoffset} ${yoffset} ${zoffset}" />
       <child link="link_${suffix}_wheel" />
       <parent link="base_footprint" />
       <axis rpy="0 0 0" xyz="0 1 0" />
       <!--<limit effort="10000" velocity="1000" />-->
    </joint>
  </xacro:macro>

  <xacro:wheel suffix="left" radius="0.030" xoffset="0" yoffset="${$(arg body_radius)}" zoffset="-0.055"/>
  <xacro:wheel suffix="right" radius="0.030" xoffset="0" yoffset="${-$(arg body_radius)}" zoffset="-0.055"/>
  <!--<link name="dummy" />
  <joint name="dummy_joint" type="fixed">
     <parent link="dummy"/>
     <child link="base_footprint"/>
  </joint>-->
  <link name="base_footprint">
    <xacro:disk_inertia mass="0.850" radius="$(arg body_radius)" height="${body_height}" orientation="0 0 0" />
    <visual>
      <geometry>
	      <cylinder length="${body_height}" radius="$(arg body_radius)" />
      </geometry>
    </visual>
    <collision>
      <geometry>
	      <cylinder length="${body_height}" radius="$(arg body_radius)" />
      </geometry>
    </collision>
 </link>

   <link name="caster_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.030"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.030"/>
      </geometry>
    </collision>
    <xacro:sphere_inertia m="1" r="0.033"/>
  </link>
  <gazebo reference="caster_wheel">
       <kp>1000000.0</kp>
       <kd>100.0</kd>
       <mu1>0</mu1>
       <mu2>0</mu2>
       <fdir1>1 0 0</fdir1>
       <maxVel>1.0</maxVel>
       <minDepth>0.00</minDepth>
       <material>Gazebo/ZincYellow</material>
    </gazebo>

  <joint name="caster_wheel_joint" type="fixed">
    <axis xyz="0 1 0" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="caster_wheel"/>
    <origin rpy="0 0 0" xyz="${$(arg body_radius)-0.03} 0 -0.055" />
  </joint>
  <gazebo>
   <plugin name="differential_drive" filename="libgazebo_ros_diff_drive.so">
      <rosDebugLevel>na</rosDebugLevel>	     
      <updateRate>30</updateRate>
      <leftJoint>joint_left_wheel</leftJoint>
      <rightJoint>joint_right_wheel</rightJoint>
      <wheelSeparation>${2*$(arg body_radius)}</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <wheelTorque>5</wheelTorque>
      <commandTopic>/cmd_vel</commandTopic>
      <publishOdom>true</publishOdom>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelTF>false</publishWheelTF>
      <odometryTopic>/odom</odometryTopic>
      <odometryFrame>/odom</odometryFrame>
      <robotBaseFrame>/base_footprint</robotBaseFrame>
      <wheelAcceleration>1.0</wheelAcceleration>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <updateRate>30</updateRate>
      <jointName>joint_left_wheel, joint_right_wheel</jointName>
    </plugin>
  </gazebo>
  <link name="base_scan">
    <visual>
      <geometry>
        <sphere radius="0.05" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.05" />
      </geometry>
    </collision>

    <inertial>
      <mass value="0.01" />
      <inertia  ixx="0.001" ixy="0.0"  ixz="0.0"  
              iyy="0.001"  iyz="0.0"  
              izz="0.001" /> 
    </inertial>

  </link>
  <joint name="base_scan_joint" type="fixed">
    <child link="base_scan" />
    <parent link="base_footprint" />
    <origin xyz="0 0 0.051" />
  </joint>
  <gazebo reference="base_scan">
    <sensor name="raycaster" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="laserscan" filename="libgazebo_ros_laser.so">
	<topicName>scan</topicName>
	<frameName>base_scan</frameName>
      </plugin>
   </sensor>
  </gazebo>
</robot>
