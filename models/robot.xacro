<robot name="vacuumcleaner" xmlns:xacro="http://wiki.ros.org/xacro">
  <!-- Radius of center disk (meters) -->
  <xacro:arg name="body_radius" default="0.1"/>

  <!-- Height of center disk (meters)-->
  <xacro:property name="body_height" value="0.04"/>
  <xacro:property name="wheel_height" value="0.018" />
  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${2.0*m*(r*r)/5.0}" ixy="0.0" ixz="0.0" iyy="${2.0*m*(r*r)/5.0}" iyz="0.0" izz="${2.0*m*(r*r)/5.0}"/>
    </inertial>
  </xacro:macro>
  <xacro:macro name="disk_inertia" params="mass radius height orientation">
    <inertial>
      <debug mass="${mass}" radius="${radius}" height="${height}" />
      <origin rpy="${orientation}" xyz="0 0 0" />
      <mass value="${mass}" />
      <inertia
        ixx="${1/12 * mass * (3* radius * radius + height * height)}"
        ixy="0"
        ixz="0"
        iyy="${1/12 * mass * (3* radius * radius + height * height)}"
        iyz="0"
        izz="${1/2 * mass * radius * radius}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="wheel" params="suffix radius length xoffset yoffset zoffset">
     <link name="link_${suffix}_wheel">
     <xacro:disk_inertia mass="0.250" radius="${radius}" height="${length}" orientation="0 1.5757 1.5757"/>
     <collision name="link_${suffix}_wheel_collision">
        <origin rpy="0 1.5757 1.5757" xyz="0 0 0" />
        <geometry>
          <cylinder length="${length}" radius="${radius}" />
        </geometry>
     </collision>
      <visual name="link_${suffix}_wheel_visual">
        <origin rpy="0 1.5757 1.5757" xyz="0 0 0" />
        <geometry>
          <cylinder length="${length}" radius="${radius}" />
        </geometry>
      </visual>
    </link>
     <gazebo reference="link_${suffix}_wheel">
       <kp>1000000.0</kp>
       <kd>100.0</kd>
       <mu1>1.0</mu1>
       <mu2>1.0</mu2>
       <fdir1>1 0 0</fdir1>
       <maxVel>1.0</maxVel>
       <minDepth>0.00</minDepth>
    </gazebo>
   <joint name="joint_${suffix}_wheel" type="continuous">
       <origin rpy="0 0 0" xyz="${xoffset} ${yoffset} ${zoffset}" />
       <child link="link_${suffix}_wheel" />
       <parent link="base_link" />
       <axis rpy="0 0 0" xyz="0 1 0" />
       <!--<limit effort="10000" velocity="1000" />-->
    </joint>
  </xacro:macro>

  <xacro:wheel suffix="left" radius="0.030" length="${wheel_height}" xoffset="0" yoffset="${$(arg body_radius)-wheel_height/2}" zoffset="-0.055"/>
  <xacro:wheel suffix="right" radius="0.030" length="${wheel_height}" xoffset="0" yoffset="${-$(arg body_radius)+wheel_height/2}" zoffset="-0.055"/>
  <!--<link name="dummy" />
  <joint name="dummy_joint" type="fixed">
     <parent link="dummy"/>
     <child link="base_link"/>
  </joint>-->
  <link name="base_link">
    <xacro:disk_inertia mass="0.850" radius="$(arg body_radius)" height="${body_height}" orientation="0 0 0" />
    <visual>
      <geometry>
	      <cylinder length="${body_height}" radius="$(arg body_radius)" />
      </geometry>
    </visual>
    <collision name="base_link_collision">
      <geometry>
	      <cylinder length="${body_height}" radius="$(arg body_radius)" />
      </geometry>
    </collision>
  </link>
  <!--
  <gazebo reference="base_link">
    <sensor name='bumper_contact' type='contact'>
      <plugin name="gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
        <bumperTopicName>bumper_vals</bumperTopicName>
        <frameName>map</frameName>
        <alwaysOn>true</alwaysOn>
        <updateRate>4.0</updateRate>
      </plugin>
      <always_on>true</always_on>
      <update_rate>4.0</update_rate>
      <contact>
        <collision>base_link_collision_collision</collision>
      </contact>
    </sensor>
  </gazebo>
  -->

   <link name="caster_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.030"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.030"/>
      </geometry>
    </collision>
    <xacro:sphere_inertia m="1" r="0.033"/>
  </link>
  <gazebo reference="caster_wheel">
       <kp>1000000.0</kp>
       <kd>100.0</kd>
       <mu1>0</mu1>
       <mu2>0</mu2>
       <fdir1>1 0 0</fdir1>
       <maxVel>1.0</maxVel>
       <minDepth>0.00</minDepth>
       <material>Gazebo/ZincYellow</material>
    </gazebo>

  <joint name="caster_wheel_joint" type="fixed">
    <axis xyz="0 1 0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin rpy="0 0 0" xyz="${$(arg body_radius)-0.03} 0 -0.055" />
  </joint>
  <gazebo>
   <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros_debug_level>na</ros_debug_level>
      <update_rate>30</update_rate>
      <left_joint>joint_left_wheel</left_joint>
      <right_joint>joint_right_wheel</right_joint>
      <wheel_separation>${2*$(arg body_radius)}</wheel_separation>
      <wheel_diameter>0.066</wheel_diameter>
      <wheel_torque>5</wheel_torque>
      <command_topic>/cmd_vel</command_topic>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      <odometry_topic>/odom</odometry_topic>
      <wheel_acceleration>1.0</wheel_acceleration>
      <odometry_frame>/odom</odometry_frame>
      <robot_base_frame>/base_link</robot_base_frame>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <argument>--remap ~/out:=joint_states</argument>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>joint_left_wheel</joint_name>
      <joint_name>joint_right_wheel</joint_name>
    </plugin>
  </gazebo>
  <link name="base_scan">
    <visual>
      <geometry>
        <sphere radius="0.05" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.05" />
      </geometry>
    </collision>

    <inertial>
      <mass value="0.01" />
      <inertia  ixx="0.001" ixy="0.0"  ixz="0.0"
              iyy="0.001"  iyz="0.0"
              izz="0.001" />
    </inertial>

  </link>
  <joint name="base_scan_joint" type="fixed">
    <child link="base_scan" />
    <parent link="base_link" />
    <origin xyz="0 0 0.051" />
  </joint>



  <gazebo reference="base_scan">
    <sensor name="raycaster" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="laserscan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <argument>--remap ~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>base_scan</frame_name>
      </plugin>
   </sensor>

  </gazebo>
</robot>